----------------------------------------------------------------
-- Script File Name:    SQLFL
-- Developer:			Justin Hurley
-- Creation Date:		11/21/2017
-- Description:			Create Table, Insert, Update, Delete, Alter, Create View, Create Index,
--						Create Procedure, Drop, Select, and Execute Commands
----------------------------------------------------------------

-- *************************************************************
-- Solmaris Condominium Group - Create, Insert, Update, Delete, Alter, Drop
-- *************************************************************

--a.
CREATE TABLE JHURLEY.LARGE_CONDO
(LOCATION_NUM INT NOT NULL,
UNIT_NUM CHAR(3) NOT NULL,
BDRMS INT  NULL,
BATHS INT  NULL,
CONDO_FEE DECIMAL(6,2) DEFAULT 0.00,
OWNER_NUM CHAR(5) NOT NULL
PRIMARY KEY(LOCATION_NUM, UNIT_NUM));

--b.
INSERT INTO JHURLEY.LARGE_CONDO
SELECT LOCATION_NUM, UNIT_NUM, BDRMS, BATHS, CONDO_FEE, OWNER_NUM
FROM JHURLEY.CONDO_UNIT
WHERE SQR_FT > 1500;

--c.
UPDATE JHURLEY.LARGE_CONDO
SET CONDO_FEE = CONDO_FEE + 150;

--d.
UPDATE JHURLEY.LARGE_CONDO 
SET CONDO_FEE = CONDO_FEE * 1.01
WHERE CONDO_FEE > 750;

--e.
INSERT INTO JHURLEY.LARGE_CONDO
VALUES(3, '605', 3, 3, 775, 'FE182');

--f.
DELETE FROM JHURLEY.LARGE_CONDO 
WHERE OWNER_NUM = 'AN175';

--g.
UPDATE JHURLEY.LARGE_CONDO
SET BDRMS = NULL
WHERE UNIT_NUM = '503';

--h.
ALTER TABLE JHURLEY.LARGE_CONDO
ADD OCCUPIED CHAR(1);

--i.
UPDATE JHURLEY.LARGE_CONDO
SET OCCUPIED = 'Y';

--j.
UPDATE JHURLEY.LARGE_CONDO
SET OCCUPIED = 'N'
WHERE UNIT_NUM = 'C06';

--k.
ALTER TABLE JHURLEY.LARGE_CONDO
ALTER COLUMN OCCUPIED CHAR(1) NOT NULL;

--l.
CREATE VIEW JHURLEY.SMALL_CONDO AS
SELECT LOCATION_NUM, UNIT_NUM, SQR_FT, OWNER_NUM
FROM JHURLEY.CONDO_UNIT
WHERE SQR_FT < 1100;

--m.
CREATE VIEW JHURLEY.FEE_GT_500 AS
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, OWNER_NUM
FROM JHURLEY.CONDO_UNIT
WHERE CONDO_FEE >= 500;

--n.
CREATE VIEW JHURLEY.CONDO_OWNERS AS
SELECT LOCATION_NUM, UNIT_NUM, SQR_FT,  CONDO_FEE, LAST_NAME
FROM JHURLEY.OWNER, JHURLEY.CONDO_UNIT
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM;

--o.
CREATE VIEW JHURLEY.BIG_BDRMS_FEE AS
SELECT LOCATION_NUM, UNIT_NUM, BDRMS, CONDO_FEE, LAST_NAME
FROM JHURLEY.CONDO_UNIT, JHURLEY.OWNER
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
BDRMS = 3 AND 
CONDO_FEE > 500;

--p.
CREATE VIEW JHURLEY.AVG_CONDO_FEE AS
SELECT CAST(AVG(CONDO_FEE) AS DECIMAL(10,2)) AS AVERAGE_FEE
FROM JHURLEY.CONDO_UNIT;

--q.
CREATE VIEW JHURLEY.FL_OWNERS AS
SELECT LOCATION_NUM, UNIT_NUM, FIRST_NAME, LAST_NAME, STATE
FROM JHURLEY.OWNER, JHURLEY.CONDO_UNIT
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
STATE = 'FL';

--r.
CREATE VIEW JHURLEY.DE_PA_OWNERS AS
SELECT LOCATION_NUM, UNIT_NUM, FIRST_NAME, LAST_NAME, STATE
FROM JHURLEY.CONDO_UNIT, JHURLEY.OWNER
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
	STATE IN
	(SELECT STATE 
	FROM JHURLEY.OWNER
	WHERE STATE = 'DE' OR STATE = 'PA');
	
--s.
CREATE VIEW JHURLEY.OPEN_STATUS AS
SELECT SERVICE_ID, CONDO_ID, STATUS
FROM JHURLEY.SERVICE_REQUEST
WHERE STATUS = 'OPEN';

--t.
CREATE INDEX OWNER_INDEX1 ON JHURLEY.OWNER(STATE);

--u.
CREATE INDEX OWNER_INDEX2 ON JHURLEY.OWNER(LAST_NAME);

--v.
CREATE INDEX OWNER_INDEX3 ON JHURLEY.OWNER(STATE DESC, CITY);

--w.
ALTER TABLE JHURLEY.CONDO_UNIT
ADD FOREIGN KEY (OWNER_NUM) REFERENCES JHURLEY.OWNER;

--x.
ALTER TABLE JHURLEY.JHURLEY.CONDO_UNIT
ADD CHECK (BDRMS IN(1,2,3));

--y.
CREATE PROCEDURE JHURLEY.DISP_OWNER_NAME
@ownernum CHAR(5)
AS
BEGIN
	SELECT OWNER_NUM,FIRST_NAME, LAST_NAME, STATE
	FROM JHURLEY.OWNER
	WHERE OWNER_NUM = @ownernum
END

--z.
CREATE PROCEDURE JHURLEY.DISP_CONDO_INFO
@sqrft INT
AS
BEGIN
	DECLARE @locationnum INT
	DECLARE @unitnum CHAR(3)
	DECLARE @condofee DECIMAL(6,2)
	DECLARE @ownernum CHAR(5)
	DECLARE mycursor CURSOR READ_ONLY

	FOR
		SELECT LOCATION_NUM, UNIT_NUM,CONDO_FEE, OWNER_NUM
		FROM JHURLEY.CONDO_UNIT
		WHERE SQR_FT = @sqrft

	OPEN mycursor
	FETCH NEXT FROM mycursor
	INTO @locationnum, @unitnum, @condofee, @ownernum

	WHILE @@FETCH_STATUS = 0
		BEGIN 
			PRINT CAST(@locationnum as VARCHAR) + ' ' + @unitnum + ' ' + CAST(@condofee AS VARCHAR) + ' ' + @ownernum
			FETCH NEXT FROM mycursor
			INTO @locationnum, @unitnum, @condofee, @ownernum
		END
END

CLOSE  mycursor
DEALLOCATE mycursor

--aa.
DROP TABLE JHURLEY.NONGAME;

--bb.
DROP TABLE JHURLEY.PADDLING;

-- *************************************************************
-- Generate Query Results 
-- ************************************************************* 

--1.
SELECT * FROM JHURLEY.SMALL_CONDO;

--2.
SELECT * FROM JHURLEY.FEE_GT_500;

--3.
SELECT * FROM JHURLEY.CONDO_OWNERS;

--4.
SELECT * FROM JHURLEY.BIG_BDRMS_FEE;

--5.
SELECT * FROM JHURLEY.AVG_CONDO_FEE;

--6.
SELECT * FROM JHURLEY.FL_OWNERS;

--7.
SELECT * FROM JHURLEY.DE_PA_OWNERS;

--8.
SELECT * FROM JHURLEY.OPEN_STATUS;

--9.
SELECT LOCATION.LOCATION_NUM, UNIT_NUM, CONDO_FEE, CONDO_UNIT.OWNER_NUM, FIRST_NAME, LAST_NAME
FROM JHURLEY.LOCATION, JHURLEY.CONDO_UNIT, JHURLEY.OWNER
WHERE LOCATION.LOCATION_NUM = CONDO_UNIT. LOCATION_NUM AND
CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM;

--10.
SELECT CONDO_UNIT.CONDO_ID, DESCRIPTION, STATUS, CATEGORY_DESCRIPTION
FROM JHURLEY.CONDO_UNIT, JHURLEY.SERVICE_REQUEST, JHURLEY.SERVICE_CATEGORY
WHERE CONDO_UNIT.CONDO_ID = SERVICE_REQUEST.CONDO_ID AND
SERVICE_REQUEST.CATEGORY_NUM = SERVICE_CATEGORY.CATEGORY_NUM AND
SERVICE_CATEGORY.CATEGORY_NUM = 6;

--11.
SELECT SERVICE_REQUEST.CONDO_ID, LOCATION_NUM, UNIT_NUM, EST_HOURS, SPENT_HOURS, OWNER.OWNER_NUM,LAST_NAME, CATEGORY_DESCRIPTION
FROM JHURLEY.SERVICE_REQUEST, JHURLEY.CONDO_UNIT, JHURLEY.OWNER, JHURLEY.SERVICE_CATEGORY
WHERE SERVICE_REQUEST.CONDO_ID = CONDO_UNIT.CONDO_ID AND 
OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
SERVICE_REQUEST.CATEGORY_NUM = SERVICE_CATEGORY.CATEGORY_NUM AND
SERVICE_CATEGORY.CATEGORY_NUM = 6;

--12.
SELECT FIRST_NAME, LAST_NAME
FROM JHURLEY.OWNER
WHERE OWNER_NUM IN
	(SELECT OWNER_NUM
	 FROM JHURLEY.CONDO_UNIT
	 WHERE BDRMS = 3);

--13.
SELECT FIRST_NAME, LAST_NAME
FROM JHURLEY.OWNER
WHERE  EXISTS
	(SELECT *
	FROM JHURLEY.CONDO_UNIT 
	WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
	 BDRMS = 3);

--14.
SELECT FST.UNIT_NUM, FST.SQR_FT, SEC.UNIT_NUM, SEC.SQR_FT
FROM JHURLEY.CONDO_UNIT FST, JHURLEY.CONDO_UNIT SEC
WHERE FST.SQR_FT = SEC.SQR_FT AND 
FST.UNIT_NUM > SEC.UNIT_NUM
ORDER BY FST.UNIT_NUM, SEC.UNIT_NUM;

--15.
SELECT SQR_FT, CONDO_UNIT.OWNER_NUM, LAST_NAME, FIRST_NAME, LOCATION_NUM
FROM JHURLEY.OWNER, JHURLEY.CONDO_UNIT
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
LOCATION_NUM = 1;

--16.
SELECT SQR_FT, CONDO_UNIT.OWNER_NUM, LAST_NAME, FIRST_NAME, LOCATION_NUM, BDRMS
FROM JHURLEY.OWNER, JHURLEY.CONDO_UNIT
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
LOCATION_NUM = 1 AND
BDRMS =3;

--17.
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM JHURLEY.CONDO_UNIT
WHERE BDRMS = 1
UNION
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM JHURLEY.OWNER, JHURLEY.CONDO_UNIT
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
STATE = 'FL';

--18.
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM JHURLEY.CONDO_UNIT, JHURLEY.OWNER
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
BDRMS = 1 AND
STATE = 'FL';

--19.
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM JHURLEY.OWNER, JHURLEY.CONDO_UNIT
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM AND
STATE = 'DE' AND 
OWNER.OWNER_NUM NOT IN
	(SELECT OWNER_NUM
	FROM JHURLEY.CONDO_UNIT
	 WHERE BDRMS = 1);
	
--20.
SELECT SERVICE_ID, CONDO_ID
FROM JHURLEY.SERVICE_REQUEST
WHERE EST_HOURS > ANY 
	(SELECT EST_HOURS
	FROM JHURLEY.SERVICE_REQUEST
	WHERE CATEGORY_NUM = 5);

--21.
SELECT SERVICE_ID, CONDO_ID
FROM JHURLEY.SERVICE_REQUEST
WHERE EST_HOURS > ALL 
	(SELECT EST_HOURS
	FROM JHURLEY.SERVICE_REQUEST
	WHERE CATEGORY_NUM = 5);

--22.
SELECT CONDO_UNIT.CONDO_ID, SQR_FT, OWNER_NUM, SERVICE_ID, EST_HOURS, SPENT_HOURS, CATEGORY_NUM
FROM JHURLEY.CONDO_UNIT, JHURLEY.SERVICE_REQUEST
WHERE CONDO_UNIT.CONDO_§
fÂg ≤*ÂÇ≤÷"”QG™+dﬂì#3äƒ˛(´Û0cå.˚RAÇ¢îNXöï|F6xõàoÕ—ëOwEu ⁄√ﬂ-nô~ﬂ[j{2%.tÒú¯ë≠ΩΩqxΩN∫Pmx$AÏ&û›àõI‡éÄ¬Èc∂A9ÆcêÏ3ﬂyi⁄öå˝~àJÕf]$ˆ M∏∞û;x√u0Iì≈@xıâe^êìcç√†∏¥ﬁO7B~åFrÿ\<k≈b{T!ÃçÈ	r?ükX-Y«S@ûT)Lea√}∞°˘Ô4∫kÔ·2ñ¢kEÏú¨ÙfsÁÀ◊€Çã3ó{o£Uõ‹ßD©lΩ±±‰‚qÙÛº-‚0çËŸ¶kvÓd‡QŒÈ6∞“º©< ÕbÎö‰ÌQÔÇ∑µ:ŸÎ&≠∞I≤ıÌ„∞|Qxe◊2®˚.ß´˙¿Ø-m%î?˝gX≥ŸA±†Ë2%§91ÏCÈ£yaƒ«Âú$™ÚZ∆Œc|èí†πˇı+Ëïº¨è≤F€π©å#ç©}G*•
!å <çOÓJ#l9´zs~ƒÅ≠q¥¥ãI§áE1âãTeÀŒZ∫ØfÃ´H<îŒ÷Ù]Ò~› ïœ )ÃÎàJÅ·ˆèÚõrÍñß.mp§©ÜÍ˝Õ≤:œ`}-Ó€¨“æƒ∫˙UÖ'˘- •˚û cH:ª.P¥≠” ß≠≈õX€≥°}/\u
€íπyØ„¸XVXﬁ~Œv@—¡∆?Sπ$5ëîê;ÒﬁÙ≠Î£^÷ëîõ„5zˇÆªÖŒ∫÷î'Eò"M∆”Ô¯Ma.%äÅ5úr™]¬
 äÀÕ§˜Ä|ÚN£$"ÉFVW“§ΩùÖ;mÌ◊øù[%&ˆd&£Öæ◊»ó∏≥‚·«‹ÿh¥†Õ¯5ÜvÊ–©≈A›WOeTMjR¯$Áà∆Ÿ)Õ˙ÜêO_"Y2î¬ √;?Z;0ÀèÉàéï‚Môù(dÍ‰•)ƒµÊNiJh|≥a#„FPå∞ŒçeÒUµ\HU62ò_˘‚gıÆBaÿÓv€wo™Êîí¡¡ªå\0FxÛ4IÕ9-Ø∂èçi1i#∑{•à¨Aı§Yı”™k2ùºU‡R¯⁄[øRº¢!¡T·Fkq
˙6©¶*¢
ö4Ú(
D	v#^¬Ü†Ú∫Dn˝Ö±$£abdãK§ñƒ"Rˇ‡âŸöXànz%ΩÕ®ËìÄL–‚»ú≠)8	˝S%[Y<ê_À+êAh]ˆ23¨Xˆ¿Â‹0?3QÁb6XbZN7‚ëm˙§38 xØ\ıŸp¨%ìó